文档规则：
    注释：
        (这是注释)
    省略：
        ...
    包含：
        <
    值：
        >
    代码：ren
        <(代码)>
操作：
    获取当前目录：
        set mypath=%cd%
        @echo %mypath%
        pause
    强制终止进程：
        taskkill /im mspdbsrv.exe /F
batch：
    move：
        移动
        ex：
            move \data\*.xls \second_q\reports\
    del:
        删除
        /f：
            强制删除
            ex：
                del /f file.txt

    ren：
        批量修改后缀名 例子：
            ren *.ans *.out 
        重命名：
            ren (file located)CCC_a003.jpg a003.CCC.jpg
    CHCP 65001：
        转成中文字符
    dir /s ：
        输出文件信息：
            例子：
                dir /s *.ma *.psd *.ZTL *.jpg *.ai *.max *.obj *.tga *.mp3 *.wmv *.avi *.docx *.pdf *.dmp *.mov *.gif *.psb >pathCollition.txt
    shutdown:
        -a:
            取消关机
        -s：
            关机
            -t:
                时间
                -c：
                    备注
        /H:
            睡眠
        
    mkdir:
        创建文件夹

    npm：
        NodeJS的安装包管理器
        install：
            安装NodeJS——SDK
        -g typescript：
            ts编译器下载
            tsc：
                ts编译码
        init:
            初始化NodeJS框架
    
    cd:
        跑到目录下：
        
        /d d: :
            盘符
        "path":
            目标路径

        ..:
        返回上一层目录
    ls:
        检查目录下的文件
    del "<filename>" ：
        删除文件
        /f:
            强行删除
    clear:
        清除当前命令行
PowerShell:
    目录下文件大小并排序：
        大小+路径
            $fso = new-object -com Scripting.FileSystemObject
            $rootDir = Get-Location

            # 获取当前目录下的所有文件
            $fileInfo = Get-ChildItem -Path $rootDir -File | ForEach-Object {
                [PSCustomObject]@{
                    Size = $_.Length
                    FullName = $_.FullName
                }
            }

            # 按文件大小从大到小排序
            $fileInfo = $fileInfo | Sort-Object -Property Size -Descending

            # 输出结果
            $fileInfo | Format-Table @{l='Size [MB]'; e={'{0:N2}' -f ($_.Size / 1MB)}}, FullName
        大小+文件名
            $rootDir = Get-Location

            # 获取当前目录下的所有文件
            $fileInfo = Get-ChildItem -Path $rootDir -File | Select-Object Name, Length

            # 按文件大小从大到小排序并输出文件名和文件大小
            $fileInfo | Sort-Object -Property Length -Descending | Format-Table @{l='Size [MB]'; e={'{0:N2}' -f ($_.Length / 1MB)}}, Name
    可执行脚本格式：.ps1
    api:
        Get-Command:
            反射命令
        cat:
            Get-Content
            读取文件内容
        echo:
            Write-Output
            例子：
                '1'>data.cpp:
                    创建一个包含‘1’的.cpp file
    .ps1 操作：
        在cmd中执行.ps1：
            Powershell.exe -executionpolicy remotesigned -File "C:\xxx\xxx.ps1"
        获取文件夹大小：
            $FolderList = Get-ChildItem -Directory
            foreach ($folder in $FolderList)
            {
                set-location $folder.FullName
                $size = Get-ChildItem -Recurse | Measure-Object -Sum Length
                $info = $folder.FullName + "    FileCount: " + $size.Count.ToString() + "   Size: " + [math]::Round(($size.Sum / 1GB),4).ToString() + " GB"
                write-host $info
            }
Win+R：
    开机启动项：
        shell:startup
    正在运行的服务：
        msconfig
    本地服务：
        Services.msc
    重启资源管理器：
        explorer
